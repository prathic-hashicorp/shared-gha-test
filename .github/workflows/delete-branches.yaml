name: Delete backport labels in plugins
description: |
  This workflow deletes backport labels (backport/vault-<version>) 
  for Vault plugins based on the specified version.
run-name: Delete ${{ inputs.version }} backport labels

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Backport label version to delete with *NO* "v", e.g., 1.19.x'
        required: true
        type: string

jobs:
  delete-labels:
    name: Delete backport labels
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.PRATHIC_GH_TOKEN }}
    steps:
      - name: Checkout current repository
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b  # v4.1.4
        with:
          token: ${{ secrets.PRATHIC_GH_TOKEN }}
          
      - name: Validate version
        shell: bash
        run: |
          version="${{ inputs.version }}"
          regex='^[0-9]+\.[0-9]+\.([0-9]+|x)([^\ ]+)?$'
          if ! [[ "${version}" =~ ${regex} ]]; then
            echo "::error::Version '${version}' is invalid, must match the pattern '${regex}'"
            exit 1
          fi

      - name: Configure Git
        run: git config --global url."https://${{ secrets.PRATHIC_GH_TOKEN }}:@github.com".insteadOf "https://github.com"

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Delete Labels
        run: |
          plabel="backport/vault-${{ inputs.version }}"

          # Initialize arrays to track results
          deleted_labels=()
          skipped_labels=()
          failed_labels=()

          # Go through all the plugins from plugins.yaml (lowercase keys)
          plugins=$(yq eval 'keys | .[]' plugins.yaml | awk '{print tolower($0)}')

          for plugin in $plugins; do
            if [[ -z "$plugin" ]]; then
              continue
            fi

            echo "::debug::Processing plugin for label deletion: $plugin"
            
            repo=$(yq eval "to_entries | map(select(.key | downcase == \"$plugin\")) | .[0].value.repository" plugins.yaml)

            # If repository is not specified or is null, use the plugin name as fallback
            if [[ "$repo" == "null" ]] || [[ -z "$repo" ]]; then
              repo="prathic-hashicorp/$plugin"
            else
              repo="prathic-hashicorp/$repo"
            fi

            echo "::debug::Deleting label in repository: $repo"

            # Check if label exists
            if ! gh label list --repo "$repo" --search "$plabel" | grep -q "$plabel"; then
              skipped_labels+=("$repo")
            else
              # Delete the label using gh CLI
              if gh label delete "$plabel" --repo "$repo" --yes; then
                deleted_labels+=("$repo")
              else
                echo "::error::Label deletion failed for repository $repo"
                failed_labels+=("$repo")
              fi
            fi
          done

          # Simple summary report
          echo "# Label Deletion Summary for vault-${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Create a simple table
          echo "| Repository | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
          
          # Get all unique repositories and their status
          all_repos=($(printf '%s\n' "${deleted_labels[@]}" "${skipped_labels[@]}" "${failed_labels[@]}" | sort -u))
          
          # Generate table rows
          for repo in "${all_repos[@]}"; do
            if [[ -n "$repo" ]]; then
              if [[ " ${deleted_labels[*]} " =~ " $repo " ]]; then
                status="✅ Deleted"
              elif [[ " ${skipped_labels[*]} " =~ " $repo " ]]; then
                status="⏭️ Not Found"
              elif [[ " ${failed_labels[*]} " =~ " $repo " ]]; then
                status="❌ Failed"
              else
                status="❓ Unknown"
              fi
              echo "| \`$repo\` | $status |" >> $GITHUB_STEP_SUMMARY
            fi
          done
          echo "" >> $GITHUB_STEP_SUMMARY

          # Exit with error if there were any failures
          if [[ ${#failed_labels[@]} -gt 0 ]]; then
            echo "::error::Some label deletion operations failed. Check the summary above."
            exit 1
          fi
